{"version":3,"sources":["webpack:///./src/pages/customers/routes/CustomerList.less?e9ca","src/pages/customers/routes/CustomerList.tsx"],"names":["module","exports","formInput","_react","_interopRequireWildcard","__webpack_require__","_CustomerList","_interopRequireDefault","_dva","_reactHookForm","CustomerList","props","columns","title","dataIndex","key","render","text","record","default","createElement","onClick","openModal","id","_divider","type","_popconfirm","onConfirm","handleDelete","dispatch","useDispatch","useEffect","payload","_useState","useState","_useState2","_slicedToArray2","isVisible","setVisible","_useState3","_useState4","loadedInfo","setLoaded","_useState5","_useState6","editingId","setEditingId","path_id","arguments","length","undefined","companies","filter","company","closeModal","useSelector","state","list","saving","loading","effects","saveChanges","data","body","_objectSpread2","_useForm","register","handleSubmit","errors","setValue","setError","reset","className","mainDiv","style","marginBottom","_table","size","dataSource","_modal","footer","onCancel","visible","_spin","spinning","onSubmit","_row","name","ref","defaultValue","cnpj","contact_email","saveButton"],"mappings":"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","file":"p__customers__routes__CustomerList.87ead9ec.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"antd-pro-pages-customers-routes-customer-list-formInput\"};","import React, { useState, useEffect } from 'react'\r\nimport styles from './CustomerList.less';\r\nimport { Divider, Popconfirm, Table, Modal, Row, Spin } from 'antd';\r\nimport { useDispatch, useSelector } from 'dva';\r\nimport useForm from 'react-hook-form';\r\n\r\ninterface Props {\r\n\r\n}\r\nconst CustomerList = (props:Props) => { \r\n    const columns = [{\r\n        title: 'Nome',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    }, {\r\n        title: 'CNPJ',\r\n        dataIndex: 'cnpj',\r\n        key: 'cnpj',\r\n    }, {\r\n        title: 'Email para contato',\r\n        dataIndex: 'contact_email',\r\n        key: 'contact_email',\r\n    }, {\r\n        title: 'Ações',\r\n        dataIndex: 'operation',\r\n        render: (text, record) =>\r\n            <span>\r\n                <a onClick={() => openModal(record.id)}>Editar</a>\r\n                <Divider type='vertical' />\r\n                <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.id)}>\r\n                    <a>Delete</a>\r\n                </Popconfirm>\r\n            </span>,\r\n    }];\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: 'companies/index',\r\n            payload: {},\r\n        })\r\n    }, [])\r\n\r\n    const [isVisible,setVisible] = useState(false)\r\n    const [loadedInfo, setLoaded] = useState(null)\r\n    const [editingId, setEditingId] = useState(null)\r\n\r\n    const handleDelete = (id:number) => {\r\n        dispatch({\r\n            type: 'companies/delete',\r\n            payload: {\r\n                path_id: [id],\r\n            }\r\n        })\r\n    }\r\n\r\n    const openModal = (id:number|null= null) => {\r\n        if(id){\r\n            setLoaded(companies.filter(company => company.id == id)[0])\r\n            setVisible(true)\r\n            setEditingId(id)\r\n        }\r\n        else{\r\n            setVisible(true)\r\n            setLoaded({})\r\n            setEditingId(null)\r\n        }\r\n    }\r\n    const closeModal = () => {\r\n        setLoaded(null)\r\n        setVisible(false)\r\n    }\r\n    \r\n    const companies = useSelector((state:any) => state.companies.list)\r\n    const saving = useSelector((state: any) => state.loading.effects['companies/store'])\r\n    const saveChanges = (data) => {\r\n        dispatch({\r\n            type: 'companies/store',\r\n            payload: {\r\n                body: {\r\n                    ...data,\r\n                    id: editingId,\r\n                }\r\n            }\r\n        })\r\n        setVisible(false)\r\n    }\r\n    const { register, handleSubmit, errors, setValue, setError, reset } = useForm();\r\n    return(    \r\n        <div className={styles.mainDiv}>\r\n            <div className={styles.formInput} style={{marginBottom: 8}}>\r\n                <button onClick={() => openModal()}>Adicionar nova empresa</button>\r\n            </div>\r\n            <Table size=\"middle\" dataSource={companies} columns={columns} />\r\n            <Modal title={'Informações da empresa'} footer={null} onCancel={() => closeModal()} visible={isVisible}>\r\n                {loadedInfo && <Spin spinning={saving || false} >\r\n                    <form onSubmit={handleSubmit(saveChanges)}>\r\n                        <Row>\r\n                            <div className={styles.formInput}>\r\n                                <label>Nome da empresa:</label>\r\n                                <input name='name' ref={register} defaultValue={loadedInfo.name}/>\r\n                            </div>\r\n                            <div className={styles.formInput}>\r\n                                <label>CNPJ:</label>\r\n                                <input name='cnpj' ref={register} defaultValue={loadedInfo.cnpj} />\r\n                            </div>\r\n                            <div className={styles.formInput}>\r\n                                <label>Email para contato:</label>\r\n                                <input name='contact_email' ref={register} defaultValue={loadedInfo.contact_email} />\r\n                            </div>\r\n                        </Row>\r\n                        <div className={styles.formInput}>\r\n                            <button type='submit' className={styles.saveButton}>Salvar</button>\r\n                        </div>\r\n                    </form>\r\n                </Spin>}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default CustomerList\r\n"],"sourceRoot":""}