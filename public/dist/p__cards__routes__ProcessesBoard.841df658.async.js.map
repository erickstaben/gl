{"version":3,"sources":["webpack:///./src/pages/cards/routes/ProcessesBoard.less?d859","src/pages/cards/routes/ProcessesBoard.tsx"],"names":["module","exports","processBoardContainer","processContainer","iconStyle","headerStyle","taskContainer","previousTask","activeTask","nextTask","_react","_interopRequireWildcard","__webpack_require__","_dva","_umi","_ProcessesBoard","_interopRequireDefault","_EmptyDiv","_components","ProcessesBoard","Panel","props","match","params","id","dispatch","useDispatch","useEffect","type","payload","processes","useSelector","state","list","_useState","useState","_useState2","_slicedToArray2","default","filterValue","setFilterValue","filterProcess","length","console","log","filter","proc","name","indexOf","updateTask","string","newValue","task_id","body","_defineProperty2","path_id","filteredProcesses","deleteProcess","createElement","className","_button","icon","style","margin","onClick","router","push","_input","Search","placeholder","width","float","onSearch","e","map","process","processIndex","ProcessComponent","key","text"],"mappings":"uFACAA,EAAAC,SAAkBC,sBAAA,oEAAAC,iBAAA,+DAAAC,UAAA,wDAAAC,YAAA,0DAAAC,cAAA,4DAAAC,aAAA,2DAAAC,WAAA,yDAAAC,SAAA,8SCDlBC,EAAAC,EAAAC,EAAA,SAEAC,EAAAD,EAAA,QACAE,EAAAF,EAAA,QAIAG,EAAAC,EAAAJ,EAAA,SACAK,EAAAD,EAAAJ,EAAA,SAEAM,EAAAN,EAAA,QAWMO,aAVEC,MAUe,SAACC,GACLA,EAAMC,MAAMC,OAAnBC,GAD2B,IAE7BC,GAAW,EAAAZ,EAAAa,gBACjB,EAAAhB,EAAAiB,WAAU,WACNF,GACIG,KAAM,kBACNC,kBAKR,IAAMC,GAAY,EAAAjB,EAAAkB,aAAY,SAACC,GAAD,OAAyBA,EAAMF,UAAUG,OAXpCC,GAYE,EAAAxB,EAAAyB,UAAS,IAZXC,GAAA,EAAAC,EAAAC,SAAAJ,EAAA,GAY5BK,EAZ4BH,EAAA,GAYhBI,EAZgBJ,EAAA,GAa7BK,EAAgB,SAACX,GACnB,OAAGS,EAAYG,OAAS,GACpBC,QAAQC,IAAIL,GACLT,EAAUe,OAAO,SAACC,GAAD,OAA4BA,EAAKC,KAAKC,QAAQT,IAAgB,KAEnFT,GAGLmB,EAAa,SAACC,EAAeC,EAAwBC,GACvD3B,GACIG,KAAM,eACNC,SACIwB,MAAI,EAAAC,EAAAhB,YACCY,EAASC,GAEdI,SAAUH,OAIhBI,EAAoBf,EAAcX,GAElC2B,EAAgB,SAACjC,GACnBC,GACIG,KAAM,iBACNC,SACI0B,SAAU/B,OAItB,OACId,EAAA4B,QAAAoB,cAAA,OAAKC,UAAW5C,EAAAuB,QAAOpC,uBAEnBQ,EAAA4B,QAAAoB,cAAA,WACIhD,EAAA4B,QAAAoB,cAAA,SAAGhD,EAAA4B,QAAAoB,cAAA,8BAEPhD,EAAA4B,QAAAoB,cAAA,WACIhD,EAAA4B,QAAAoB,cAAAE,EAAAtB,SAAQuB,KAAM,OAAQjC,KAAM,UAAWkC,OAASC,OAAQ,WAAaC,QAAS,kBAAMlD,EAAAmD,OAAOC,KAAP,2BAAoC,2BACxHxD,EAAA4B,QAAAoB,cAACS,EAAA7B,QAAM8B,QAAOC,YAAY,2BAA2BP,OAASQ,MAAO,IAAKC,MAAO,SAAUC,SAAU,SAACC,GAAD,OAAOjC,EAAeiC,OAG/H/D,EAAA4B,QAAAoB,cAAA,OAAKC,UAAW5C,EAAAuB,QAAOnC,kBAClBqD,EAAkBd,OAAS,EAAIc,EAAkBkB,IAAI,SAACC,EAA2BC,GAC9E,OACIlE,EAAA4B,QAAAoB,cAACxC,EAAA2D,kBACGC,IAAKF,EACLD,QAASA,EACT1B,WAAYA,EACZQ,cAAeA,MAGtB/C,EAAA4B,QAAAoB,cAACzC,EAAAqB,SAASyC,KAAM,qCAMtB5D","file":"p__cards__routes__ProcessesBoard.841df658.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"processBoardContainer\":\"antd-pro-pages-cards-routes-processes-board-processBoardContainer\",\"processContainer\":\"antd-pro-pages-cards-routes-processes-board-processContainer\",\"iconStyle\":\"antd-pro-pages-cards-routes-processes-board-iconStyle\",\"headerStyle\":\"antd-pro-pages-cards-routes-processes-board-headerStyle\",\"taskContainer\":\"antd-pro-pages-cards-routes-processes-board-taskContainer\",\"previousTask\":\"antd-pro-pages-cards-routes-processes-board-previousTask\",\"activeTask\":\"antd-pro-pages-cards-routes-processes-board-activeTask\",\"nextTask\":\"antd-pro-pages-cards-routes-processes-board-nextTask\"};","import React, { useEffect, useState } from 'react';\r\nimport { Collapse, Spin, Input, Checkbox, Button } from 'antd';\r\nimport { useDispatch, useSelector} from 'dva';\r\nimport { router } from 'umi';\r\n\r\nimport { ConnectState } from '@/models/connect';\r\nimport { ActivityInterface, ProcessInterface, TaskInterface } from '@/models/database';\r\nimport styles from './ProcessesBoard.less';\r\nimport EmptyDiv from '../components/EmptyDiv/EmptyDiv';\r\nimport { MdTimer, MdCheck, MdSettings, MdDelete } from 'react-icons/md';\r\nimport { ProcessComponent } from '../components';\r\nconst { Panel } = Collapse;\r\n\r\ninterface Props {\r\n    match: {\r\n        params: {\r\n            id: number;\r\n        }\r\n    }\r\n}\r\n\r\nconst ProcessesBoard = (props:Props) => {\r\n    const { id } = props.match.params\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: 'processes/index',\r\n            payload: {}\r\n        })\r\n    },[])\r\n\r\n\r\n    const processes = useSelector((state: ConnectState) => state.processes.list)\r\n    const [filterValue,setFilterValue] = useState('')\r\n    const filterProcess = (processes:ProcessInterface[]) => {\r\n        if(filterValue.length > 0){\r\n            console.log(filterValue)\r\n            return processes.filter((proc: ProcessInterface) => proc.name.indexOf(filterValue) >= 0)\r\n        }\r\n        return processes\r\n    }\r\n\r\n    const updateTask = (string:string, newValue:string|boolean,task_id: number) => {\r\n        dispatch({\r\n            type: 'tasks/update',\r\n            payload: {\r\n                body: {\r\n                    [string]: newValue,\r\n                },\r\n                path_id: [task_id],\r\n            }\r\n        })\r\n    }\r\n    const filteredProcesses = filterProcess(processes)\r\n\r\n    const deleteProcess = (id: number) => {\r\n        dispatch({\r\n            type: 'process/delete',\r\n            payload: {\r\n                path_id: [id],\r\n            }\r\n        })\r\n    }    \r\n    return (\r\n        <div className={styles.processBoardContainer}>\r\n            \r\n            <div>\r\n                <b><h3>Meus processos</h3></b>                \r\n            </div>\r\n            <div>\r\n                <Button icon={'plus'} type={'primary'} style={{ margin: '8px 4px' }} onClick={() => router.push(`/processes/new/config`)}>Adicionar novo processo</Button>\r\n                <Input.Search placeholder='Digite para pesquisar...' style={{ width: 200, float: 'right'}} onSearch={(e) => setFilterValue(e)} />\r\n            </div>\r\n            \r\n            <div className={styles.processContainer}>\r\n                {filteredProcesses.length > 0 ? filteredProcesses.map((process: ProcessInterface, processIndex: number) => {\r\n                    return (\r\n                        <ProcessComponent\r\n                            key={processIndex}  \r\n                            process={process} \r\n                            updateTask={updateTask} \r\n                            deleteProcess={deleteProcess}\r\n                        />\r\n                    )\r\n                }) : <EmptyDiv text={'Nenhum processo encontrado'}/>}\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProcessesBoard \r\n\r\n"],"sourceRoot":""}