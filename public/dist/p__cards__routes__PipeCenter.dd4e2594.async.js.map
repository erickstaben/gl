{"version":3,"sources":["webpack:///./src/pages/cards/routes/PipeCenter.less?73d5","src/pages/cards/routes/PipeCenter.tsx"],"names":["module","exports","pipeCenterLayout","containerDisplay","pipeCard","pipeDeleteIcon","favoriteIcon","pipeFavoriteIcon","pipeLink","pipeCount","pipeCountLabel","pipeName","formInput","_react","_interopRequireWildcard","__webpack_require__","_reactRouterDom","_dva","_PipeCenter","_interopRequireDefault","_umi","PipeCenter","dispatch","useDispatch","useEffect","type","payload","pipes","useSelector","state","overview","processes","list","setPipeFavorite","pipe_id","path_id","deletePipe","id","handleSubmit","data","name","newPipeName","body","setVisible","saving","loading","effects","_useState","useState","_useState2","_slicedToArray2","default","setPipeName","_useState3","_useState4","modalVisible","createElement","className","style","textAlign","map","pipe","onClick","_icon","theme","is_favorite","_popconfirm","onConfirm","title","Link","to","concat","display","fontSize","totalCards","_modal","visible","onOk","onCancel","_spin","spinning","configContainer","_row","defaultValue","onChange","e","target","value","process","total_tasks","completed_tasks","router","push"],"mappings":"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","file":"p__cards__routes__PipeCenter.dd4e2594.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pipeCenterLayout\":\"antd-pro-pages-cards-routes-pipe-center-pipeCenterLayout\",\"containerDisplay\":\"antd-pro-pages-cards-routes-pipe-center-containerDisplay\",\"pipeCard\":\"antd-pro-pages-cards-routes-pipe-center-pipeCard\",\"pipeDeleteIcon\":\"antd-pro-pages-cards-routes-pipe-center-pipeDeleteIcon\",\"favoriteIcon\":\"antd-pro-pages-cards-routes-pipe-center-favoriteIcon\",\"pipeFavoriteIcon\":\"antd-pro-pages-cards-routes-pipe-center-pipeFavoriteIcon\",\"pipeLink\":\"antd-pro-pages-cards-routes-pipe-center-pipeLink\",\"pipeCount\":\"antd-pro-pages-cards-routes-pipe-center-pipeCount\",\"pipeCountLabel\":\"antd-pro-pages-cards-routes-pipe-center-pipeCountLabel\",\"pipeName\":\"antd-pro-pages-cards-routes-pipe-center-pipeName\",\"formInput\":\"antd-pro-pages-cards-routes-pipe-center-formInput\"};","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector, routerRedux } from 'dva';\r\nimport styles from './PipeCenter.less';\r\nimport { ConnectState } from '@/models/connect';\r\nimport { ID } from '@/models/database';\r\nimport { Modal, Spin, Row, Col,  Icon, Switch, Popconfirm } from 'antd';\r\nimport { router } from 'umi';\r\n\r\n\r\nconst PipeCenter = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: 'pipes/pipesOverview',\r\n            payload: {},\r\n        })\r\n        dispatch({\r\n            type: 'processes/index',\r\n            payload: {},\r\n        })\r\n    }, [])\r\n    const pipes = useSelector((state:ConnectState) => state.pipes.overview)\r\n    const processes = useSelector((state:ConnectState) => state.processes.list)\r\n    const setPipeFavorite = (pipe_id:ID) => {\r\n        dispatch({\r\n            type: 'pipes/pipeFavorite',\r\n            payload: {\r\n                path_id: [pipe_id],\r\n            },\r\n        })\r\n    }\r\n    const deletePipe = (id) => {\r\n        dispatch({\r\n            type: 'pipes/pipeDelete',\r\n            payload: {\r\n                path_id: [id]\r\n            }\r\n        })\r\n        dispatch({\r\n            type: 'pipes/pipesOverview',\r\n            payload: {},\r\n        })\r\n    }\r\n    const handleSubmit = () => {\r\n        const data = {\r\n            name: newPipeName,\r\n        }\r\n        dispatch({\r\n            type: 'pipes/pipeCreate',\r\n            payload: {\r\n                body: data,\r\n            }\r\n        })\r\n        dispatch({\r\n            type: 'pipes/pipesOverview',\r\n            payload: {},\r\n        })\r\n        setVisible(false)\r\n\r\n    }\r\n    const saving = useSelector((state:any) => state.loading.effects['pipes/pipeCreate'])\r\n    const loading = useSelector((state:any) => state.loading.effects['pipes/pipeDelete'])\r\n    const [newPipeName,setPipeName] = useState('')\r\n    const [modalVisible,setVisible] = useState(false)\r\n    return (<div className={styles.pipeCenterLayout}>\r\n        <div style={{textAlign:'center'}}>\r\n            <h2>Central de atividades</h2>\r\n        </div>\r\n        <h3>Meus pipes</h3>\r\n        <div className={styles.containerDisplay}>\r\n            {pipes ? pipes.map(pipe => \r\n                <div className={styles.pipeCard}>\r\n                    <span className={styles.pipeFavoriteIcon} onClick={() => setPipeFavorite(pipe.id)}>\r\n                        <Icon className={styles.favoriteIcon} theme={pipe.is_favorite ? 'filled' : 'outlined'} type=\"heart\"/>\r\n                    </span>\r\n                    <Popconfirm onConfirm={() => deletePipe(pipe.id)} title={'VocÃª tem certeza que deseja deletar esse pipe?'}>\r\n                        <span className={styles.pipeDeleteIcon}>\r\n                            <Icon className={styles.favoriteIcon} theme={'outlined'} type=\"delete\"/>\r\n                        </span>\r\n                    </Popconfirm>\r\n                    <Link className={styles.pipeLink} to={`./pipes/${pipe.id}`}>\r\n                        <span className={styles.pipeCount}>\r\n                            <div style={{ display: 'grid', textAlign: 'center' }}>\r\n                            <span>\r\n                                <b style={{ fontSize: 36 }}>{pipe.totalCards}</b><span className={styles.pipeCountLabel}>atividades</span>\r\n                            </span>\r\n                            <span className={styles.pipeName}>\r\n                                {pipe.name}\r\n                            </span>\r\n                            </div>\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n            ) : null}\r\n            <div className={styles.pipeCard} onClick={() => setVisible(true)}>\r\n                <div className={styles.pipeLink}>\r\n                    <span className={styles.pipeCount}>\r\n                        <div style={{ display: 'grid' }}>\r\n                            <span style={{textAlign: 'center'}}>\r\n                                <Icon type={'plus'} style={{fontSize: 64}}/>\r\n                            </span>\r\n                            <span className={styles.pipeName}>\r\n                                Adicionar novo pipe\r\n                            </span>\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Modal\r\n          title=\"Adicionar novo pipe\"\r\n          visible={modalVisible}\r\n          onOk={handleSubmit}\r\n          onCancel={() => setVisible(false)}\r\n        >\r\n            <Spin spinning={saving || loading || false} className={styles.configContainer}>\r\n                <Row>\r\n                    <div className={styles.formInput}>\r\n                        <label>Nome do pipe:</label>\r\n                        <input defaultValue={newPipeName} onChange={(e) => setPipeName(e.target.value)}/>\r\n                    </div>\r\n                </Row>\r\n                <div>\r\n                    <span>\r\n                        O pipe serÃ¡ criado somente com uma fase vazia.\r\n                    </span>\r\n                </div>\r\n            </Spin>\r\n        </Modal>\r\n        <h3>Meus processos</h3>\r\n        <div className={styles.containerDisplay}>\r\n            {processes ? processes.map(process => \r\n                <div className={styles.pipeCard}>\r\n                    <Link className={styles.pipeLink} to={`./processes`}>\r\n                        <span className={styles.pipeCount}>\r\n                            <div style={{ display: 'grid', textAlign: 'center' }}>\r\n                                <span>\r\n                                    <b style={{ fontSize: 36 }}>{process.total_tasks}</b><span className={styles.pipeCountLabel}>tarefas</span>\r\n                                </span>\r\n                                <span>\r\n                                    {process.total_tasks - process.completed_tasks} pendentes\r\n                                </span>\r\n                                <span className={styles.pipeName}>\r\n                                    {process.name}\r\n                                </span>\r\n                            </div>\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n            ) : null}  \r\n            <div className={styles.pipeCard} onClick={() => router.push('/processes/new/config')}>\r\n                <div className={styles.pipeLink}>\r\n                    <span className={styles.pipeCount}>\r\n                        <div style={{ display: 'grid' }}>\r\n                            <span style={{textAlign: 'center'}}>\r\n                                <Icon type={'plus'} style={{fontSize: 64}}/>\r\n                            </span>\r\n                            <span className={styles.pipeName}>\r\n                                Adicionar novo processo\r\n                            </span>\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n            </div>          \r\n        </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default PipeCenter\r\n"],"sourceRoot":""}